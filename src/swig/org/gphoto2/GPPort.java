/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package swig.org.gphoto2;

public class GPPort {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public GPPort(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(GPPort obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gphoto2JNI.delete_GPPort(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setType(GPPortType value) {
    gphoto2JNI.GPPort_type_set(swigCPtr, this, value.swigValue());
  }

  public GPPortType getType() {
    return GPPortType.swigToEnum(gphoto2JNI.GPPort_type_get(swigCPtr, this));
  }

  public void setSettings(GPPortSettings value) {
    gphoto2JNI.GPPort_settings_set(swigCPtr, this, GPPortSettings.getCPtr(value), value);
  }

  public GPPortSettings getSettings() {
    long cPtr = gphoto2JNI.GPPort_settings_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GPPortSettings(cPtr, false);
  }

  public void setSettings_pending(GPPortSettings value) {
    gphoto2JNI.GPPort_settings_pending_set(swigCPtr, this, GPPortSettings.getCPtr(value), value);
  }

  public GPPortSettings getSettings_pending() {
    long cPtr = gphoto2JNI.GPPort_settings_pending_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GPPortSettings(cPtr, false);
  }

  public void setTimeout(int value) {
    gphoto2JNI.GPPort_timeout_set(swigCPtr, this, value);
  }

  public int getTimeout() {
    return gphoto2JNI.GPPort_timeout_get(swigCPtr, this);
  }

  public void setPl(SWIGTYPE_p__GPPortPrivateLibrary value) {
    gphoto2JNI.GPPort_pl_set(swigCPtr, this, SWIGTYPE_p__GPPortPrivateLibrary.getCPtr(value));
  }

  public SWIGTYPE_p__GPPortPrivateLibrary getPl() {
    long cPtr = gphoto2JNI.GPPort_pl_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p__GPPortPrivateLibrary(cPtr, false);
  }

  public void setPc(SWIGTYPE_p__GPPortPrivateCore value) {
    gphoto2JNI.GPPort_pc_set(swigCPtr, this, SWIGTYPE_p__GPPortPrivateCore.getCPtr(value));
  }

  public SWIGTYPE_p__GPPortPrivateCore getPc() {
    long cPtr = gphoto2JNI.GPPort_pc_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p__GPPortPrivateCore(cPtr, false);
  }

  public GPPort() {
    this(gphoto2JNI.new_GPPort(), true);
  }

}
