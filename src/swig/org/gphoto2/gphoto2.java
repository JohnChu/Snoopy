/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package swig.org.gphoto2;

public class gphoto2 implements gphoto2Constants {
  public static int gp_abilities_list_new(SWIGTYPE_p_p__CameraAbilitiesList list) {
    return gphoto2JNI.gp_abilities_list_new(SWIGTYPE_p_p__CameraAbilitiesList.getCPtr(list));
  }

  public static int gp_abilities_list_free(_CameraAbilitiesList list) {
    return gphoto2JNI.gp_abilities_list_free(_CameraAbilitiesList.getCPtr(list), list);
  }

  public static int gp_abilities_list_load(_CameraAbilitiesList list, _GPContext context) {
    return gphoto2JNI.gp_abilities_list_load(_CameraAbilitiesList.getCPtr(list), list, _GPContext.getCPtr(context), context);
  }

  public static int gp_abilities_list_reset(_CameraAbilitiesList list) {
    return gphoto2JNI.gp_abilities_list_reset(_CameraAbilitiesList.getCPtr(list), list);
  }

  public static int gp_abilities_list_detect(_CameraAbilitiesList list, _GPPortInfoList info_list, SWIGTYPE_p__CameraList l, _GPContext context) {
    return gphoto2JNI.gp_abilities_list_detect(_CameraAbilitiesList.getCPtr(list), list, _GPPortInfoList.getCPtr(info_list), info_list, SWIGTYPE_p__CameraList.getCPtr(l), _GPContext.getCPtr(context), context);
  }

  public static int gp_abilities_list_append(_CameraAbilitiesList list, CameraAbilities abilities) {
    return gphoto2JNI.gp_abilities_list_append(_CameraAbilitiesList.getCPtr(list), list, CameraAbilities.getCPtr(abilities), abilities);
  }

  public static int gp_abilities_list_count(_CameraAbilitiesList list) {
    return gphoto2JNI.gp_abilities_list_count(_CameraAbilitiesList.getCPtr(list), list);
  }

  public static int gp_abilities_list_lookup_model(_CameraAbilitiesList list, String model) {
    return gphoto2JNI.gp_abilities_list_lookup_model(_CameraAbilitiesList.getCPtr(list), list, model);
  }

  public static int gp_abilities_list_get_abilities(_CameraAbilitiesList list, int index, CameraAbilities abilities) {
    return gphoto2JNI.gp_abilities_list_get_abilities(_CameraAbilitiesList.getCPtr(list), list, index, CameraAbilities.getCPtr(abilities), abilities);
  }

  public static String gp_message_codeset(String arg0) {
    return gphoto2JNI.gp_message_codeset(arg0);
  }

  public static int gp_camera_new(SWIGTYPE_p_p__Camera camera) {
    return gphoto2JNI.gp_camera_new(SWIGTYPE_p_p__Camera.getCPtr(camera));
  }

  public static int gp_camera_set_abilities(_Camera camera, CameraAbilities abilities) {
    return gphoto2JNI.gp_camera_set_abilities(_Camera.getCPtr(camera), camera, CameraAbilities.getCPtr(abilities), abilities);
  }

  public static int gp_camera_get_abilities(_Camera camera, CameraAbilities abilities) {
    return gphoto2JNI.gp_camera_get_abilities(_Camera.getCPtr(camera), camera, CameraAbilities.getCPtr(abilities), abilities);
  }

  public static int gp_camera_set_port_info(_Camera camera, GPPortInfo info) {
    return gphoto2JNI.gp_camera_set_port_info(_Camera.getCPtr(camera), camera, GPPortInfo.getCPtr(info), info);
  }

  public static int gp_camera_get_port_info(_Camera camera, GPPortInfo info) {
    return gphoto2JNI.gp_camera_get_port_info(_Camera.getCPtr(camera), camera, GPPortInfo.getCPtr(info), info);
  }

  public static int gp_camera_set_port_speed(_Camera camera, int speed) {
    return gphoto2JNI.gp_camera_set_port_speed(_Camera.getCPtr(camera), camera, speed);
  }

  public static int gp_camera_get_port_speed(_Camera camera) {
    return gphoto2JNI.gp_camera_get_port_speed(_Camera.getCPtr(camera), camera);
  }

  public static int gp_camera_init(_Camera camera, _GPContext context) {
    return gphoto2JNI.gp_camera_init(_Camera.getCPtr(camera), camera, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_exit(_Camera camera, _GPContext context) {
    return gphoto2JNI.gp_camera_exit(_Camera.getCPtr(camera), camera, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_ref(_Camera camera) {
    return gphoto2JNI.gp_camera_ref(_Camera.getCPtr(camera), camera);
  }

  public static int gp_camera_unref(_Camera camera) {
    return gphoto2JNI.gp_camera_unref(_Camera.getCPtr(camera), camera);
  }

  public static int gp_camera_free(_Camera camera) {
    return gphoto2JNI.gp_camera_free(_Camera.getCPtr(camera), camera);
  }

  public static int gp_camera_get_config(_Camera camera, SWIGTYPE_p_p__CameraWidget window, _GPContext context) {
    return gphoto2JNI.gp_camera_get_config(_Camera.getCPtr(camera), camera, SWIGTYPE_p_p__CameraWidget.getCPtr(window), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_set_config(_Camera camera, SWIGTYPE_p__CameraWidget window, _GPContext context) {
    return gphoto2JNI.gp_camera_set_config(_Camera.getCPtr(camera), camera, SWIGTYPE_p__CameraWidget.getCPtr(window), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_get_summary(_Camera camera, CameraText summary, _GPContext context) {
    return gphoto2JNI.gp_camera_get_summary(_Camera.getCPtr(camera), camera, CameraText.getCPtr(summary), summary, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_get_manual(_Camera camera, CameraText manual, _GPContext context) {
    return gphoto2JNI.gp_camera_get_manual(_Camera.getCPtr(camera), camera, CameraText.getCPtr(manual), manual, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_get_about(_Camera camera, CameraText about, _GPContext context) {
    return gphoto2JNI.gp_camera_get_about(_Camera.getCPtr(camera), camera, CameraText.getCPtr(about), about, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_capture(_Camera camera, CameraCaptureType type, CameraFilePath path, _GPContext context) {
    return gphoto2JNI.gp_camera_capture(_Camera.getCPtr(camera), camera, type.swigValue(), CameraFilePath.getCPtr(path), path, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_capture_preview(_Camera camera, SWIGTYPE_p__CameraFile file, _GPContext context) {
    return gphoto2JNI.gp_camera_capture_preview(_Camera.getCPtr(camera), camera, SWIGTYPE_p__CameraFile.getCPtr(file), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_wait_for_event(_Camera camera, int timeout, SWIGTYPE_p_CameraEventType eventtype, SWIGTYPE_p_p_void eventdata, _GPContext context) {
    return gphoto2JNI.gp_camera_wait_for_event(_Camera.getCPtr(camera), camera, timeout, SWIGTYPE_p_CameraEventType.getCPtr(eventtype), SWIGTYPE_p_p_void.getCPtr(eventdata), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_get_storageinfo(_Camera camera, SWIGTYPE_p_p__CameraStorageInformation arg1, SWIGTYPE_p_int arg2, _GPContext context) {
    return gphoto2JNI.gp_camera_get_storageinfo(_Camera.getCPtr(camera), camera, SWIGTYPE_p_p__CameraStorageInformation.getCPtr(arg1), SWIGTYPE_p_int.getCPtr(arg2), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_folder_list_files(_Camera camera, String folder, SWIGTYPE_p__CameraList list, _GPContext context) {
    return gphoto2JNI.gp_camera_folder_list_files(_Camera.getCPtr(camera), camera, folder, SWIGTYPE_p__CameraList.getCPtr(list), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_folder_list_folders(_Camera camera, String folder, SWIGTYPE_p__CameraList list, _GPContext context) {
    return gphoto2JNI.gp_camera_folder_list_folders(_Camera.getCPtr(camera), camera, folder, SWIGTYPE_p__CameraList.getCPtr(list), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_folder_delete_all(_Camera camera, String folder, _GPContext context) {
    return gphoto2JNI.gp_camera_folder_delete_all(_Camera.getCPtr(camera), camera, folder, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_folder_put_file(_Camera camera, String folder, SWIGTYPE_p__CameraFile file, _GPContext context) {
    return gphoto2JNI.gp_camera_folder_put_file(_Camera.getCPtr(camera), camera, folder, SWIGTYPE_p__CameraFile.getCPtr(file), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_folder_make_dir(_Camera camera, String folder, String name, _GPContext context) {
    return gphoto2JNI.gp_camera_folder_make_dir(_Camera.getCPtr(camera), camera, folder, name, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_folder_remove_dir(_Camera camera, String folder, String name, _GPContext context) {
    return gphoto2JNI.gp_camera_folder_remove_dir(_Camera.getCPtr(camera), camera, folder, name, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_file_get_info(_Camera camera, String folder, String file, CameraFileInfo info, _GPContext context) {
    return gphoto2JNI.gp_camera_file_get_info(_Camera.getCPtr(camera), camera, folder, file, CameraFileInfo.getCPtr(info), info, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_file_set_info(_Camera camera, String folder, String file, CameraFileInfo info, _GPContext context) {
    return gphoto2JNI.gp_camera_file_set_info(_Camera.getCPtr(camera), camera, folder, file, CameraFileInfo.getCPtr(info), info, _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_file_get(_Camera camera, String folder, String file, CameraFileType type, SWIGTYPE_p__CameraFile camera_file, _GPContext context) {
    return gphoto2JNI.gp_camera_file_get(_Camera.getCPtr(camera), camera, folder, file, type.swigValue(), SWIGTYPE_p__CameraFile.getCPtr(camera_file), _GPContext.getCPtr(context), context);
  }

  public static int gp_camera_file_delete(_Camera camera, String folder, String file, _GPContext context) {
    return gphoto2JNI.gp_camera_file_delete(_Camera.getCPtr(camera), camera, folder, file, _GPContext.getCPtr(context), context);
  }

  public static void gp_camera_set_timeout_funcs(_Camera camera, SWIGTYPE_p_f_p_struct__Camera_unsigned_int_p_f_p_struct__Camera_p_struct__GPContext__int_p_void__unsigned_int start_func, SWIGTYPE_p_f_p_struct__Camera_unsigned_int_p_void__void stop_func, SWIGTYPE_p_void data) {
    gphoto2JNI.gp_camera_set_timeout_funcs(_Camera.getCPtr(camera), camera, SWIGTYPE_p_f_p_struct__Camera_unsigned_int_p_f_p_struct__Camera_p_struct__GPContext__int_p_void__unsigned_int.getCPtr(start_func), SWIGTYPE_p_f_p_struct__Camera_unsigned_int_p_void__void.getCPtr(stop_func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static int gp_camera_start_timeout(_Camera camera, long timeout, SWIGTYPE_p_f_p_struct__Camera_p_struct__GPContext__int func) {
    return gphoto2JNI.gp_camera_start_timeout(_Camera.getCPtr(camera), camera, timeout, SWIGTYPE_p_f_p_struct__Camera_p_struct__GPContext__int.getCPtr(func));
  }

  public static void gp_camera_stop_timeout(_Camera camera, long id) {
    gphoto2JNI.gp_camera_stop_timeout(_Camera.getCPtr(camera), camera, id);
  }

  public static _GPContext gp_context_new() {
    long cPtr = gphoto2JNI.gp_context_new();
    return (cPtr == 0) ? null : new _GPContext(cPtr, false);
  }

  public static void gp_context_ref(_GPContext context) {
    gphoto2JNI.gp_context_ref(_GPContext.getCPtr(context), context);
  }

  public static void gp_context_unref(_GPContext context) {
    gphoto2JNI.gp_context_unref(_GPContext.getCPtr(context), context);
  }

  public static void gp_context_set_idle_func(_GPContext context, SWIGTYPE_p_f_p_struct__GPContext_p_void__void func, SWIGTYPE_p_void data) {
    gphoto2JNI.gp_context_set_idle_func(_GPContext.getCPtr(context), context, SWIGTYPE_p_f_p_struct__GPContext_p_void__void.getCPtr(func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static void gp_context_set_progress_funcs(_GPContext context, SWIGTYPE_p_f_p_struct__GPContext_float_p_q_const__char_va_list_p_void__unsigned_int start_func, SWIGTYPE_p_f_p_struct__GPContext_unsigned_int_float_p_void__void update_func, SWIGTYPE_p_f_p_struct__GPContext_unsigned_int_p_void__void stop_func, SWIGTYPE_p_void data) {
    gphoto2JNI.gp_context_set_progress_funcs(_GPContext.getCPtr(context), context, SWIGTYPE_p_f_p_struct__GPContext_float_p_q_const__char_va_list_p_void__unsigned_int.getCPtr(start_func), SWIGTYPE_p_f_p_struct__GPContext_unsigned_int_float_p_void__void.getCPtr(update_func), SWIGTYPE_p_f_p_struct__GPContext_unsigned_int_p_void__void.getCPtr(stop_func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static void gp_context_set_error_func(_GPContext context, SWIGTYPE_p_f_p_struct__GPContext_p_q_const__char_va_list_p_void__void func, SWIGTYPE_p_void data) {
    gphoto2JNI.gp_context_set_error_func(_GPContext.getCPtr(context), context, SWIGTYPE_p_f_p_struct__GPContext_p_q_const__char_va_list_p_void__void.getCPtr(func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static void gp_context_set_status_func(_GPContext context, SWIGTYPE_p_f_p_struct__GPContext_p_q_const__char_va_list_p_void__void func, SWIGTYPE_p_void data) {
    gphoto2JNI.gp_context_set_status_func(_GPContext.getCPtr(context), context, SWIGTYPE_p_f_p_struct__GPContext_p_q_const__char_va_list_p_void__void.getCPtr(func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static void gp_context_set_question_func(_GPContext context, SWIGTYPE_p_f_p_struct__GPContext_p_q_const__char_va_list_p_void___GPContextFeedback func, SWIGTYPE_p_void data) {
    gphoto2JNI.gp_context_set_question_func(_GPContext.getCPtr(context), context, SWIGTYPE_p_f_p_struct__GPContext_p_q_const__char_va_list_p_void___GPContextFeedback.getCPtr(func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static void gp_context_set_cancel_func(_GPContext context, SWIGTYPE_p_f_p_struct__GPContext_p_void___GPContextFeedback func, SWIGTYPE_p_void data) {
    gphoto2JNI.gp_context_set_cancel_func(_GPContext.getCPtr(context), context, SWIGTYPE_p_f_p_struct__GPContext_p_void___GPContextFeedback.getCPtr(func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static void gp_context_set_message_func(_GPContext context, SWIGTYPE_p_f_p_struct__GPContext_p_q_const__char_va_list_p_void__void func, SWIGTYPE_p_void data) {
    gphoto2JNI.gp_context_set_message_func(_GPContext.getCPtr(context), context, SWIGTYPE_p_f_p_struct__GPContext_p_q_const__char_va_list_p_void__void.getCPtr(func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static void gp_context_idle(_GPContext context) {
    gphoto2JNI.gp_context_idle(_GPContext.getCPtr(context), context);
  }

  public static void gp_context_error(_GPContext context, String format) {
    gphoto2JNI.gp_context_error(_GPContext.getCPtr(context), context, format);
  }

  public static void gp_context_status(_GPContext context, String format) {
    gphoto2JNI.gp_context_status(_GPContext.getCPtr(context), context, format);
  }

  public static void gp_context_message(_GPContext context, String format) {
    gphoto2JNI.gp_context_message(_GPContext.getCPtr(context), context, format);
  }

  public static GPContextFeedback gp_context_question(_GPContext context, String format) {
    return GPContextFeedback.swigToEnum(gphoto2JNI.gp_context_question(_GPContext.getCPtr(context), context, format));
  }

  public static GPContextFeedback gp_context_cancel(_GPContext context) {
    return GPContextFeedback.swigToEnum(gphoto2JNI.gp_context_cancel(_GPContext.getCPtr(context), context));
  }

  public static long gp_context_progress_start(_GPContext context, float target, String format) {
    return gphoto2JNI.gp_context_progress_start(_GPContext.getCPtr(context), context, target, format);
  }

  public static void gp_context_progress_update(_GPContext context, long id, float current) {
    gphoto2JNI.gp_context_progress_update(_GPContext.getCPtr(context), context, id, current);
  }

  public static void gp_context_progress_stop(_GPContext context, long id) {
    gphoto2JNI.gp_context_progress_stop(_GPContext.getCPtr(context), context, id);
  }

  public static int gp_file_new(SWIGTYPE_p_p__CameraFile file) {
    return gphoto2JNI.gp_file_new(SWIGTYPE_p_p__CameraFile.getCPtr(file));
  }

  public static int gp_file_new_from_fd(SWIGTYPE_p_p__CameraFile file, int fd) {
    return gphoto2JNI.gp_file_new_from_fd(SWIGTYPE_p_p__CameraFile.getCPtr(file), fd);
  }

  public static int gp_file_ref(SWIGTYPE_p__CameraFile file) {
    return gphoto2JNI.gp_file_ref(SWIGTYPE_p__CameraFile.getCPtr(file));
  }

  public static int gp_file_unref(SWIGTYPE_p__CameraFile file) {
    return gphoto2JNI.gp_file_unref(SWIGTYPE_p__CameraFile.getCPtr(file));
  }

  public static int gp_file_free(SWIGTYPE_p__CameraFile file) {
    return gphoto2JNI.gp_file_free(SWIGTYPE_p__CameraFile.getCPtr(file));
  }

  public static int gp_file_open(SWIGTYPE_p__CameraFile file, String filename) {
    return gphoto2JNI.gp_file_open(SWIGTYPE_p__CameraFile.getCPtr(file), filename);
  }

  public static int gp_file_save(SWIGTYPE_p__CameraFile file, String filename) {
    return gphoto2JNI.gp_file_save(SWIGTYPE_p__CameraFile.getCPtr(file), filename);
  }

  public static int gp_file_clean(SWIGTYPE_p__CameraFile file) {
    return gphoto2JNI.gp_file_clean(SWIGTYPE_p__CameraFile.getCPtr(file));
  }

  public static int gp_file_copy(SWIGTYPE_p__CameraFile destination, SWIGTYPE_p__CameraFile source) {
    return gphoto2JNI.gp_file_copy(SWIGTYPE_p__CameraFile.getCPtr(destination), SWIGTYPE_p__CameraFile.getCPtr(source));
  }

  public static int gp_file_set_name(SWIGTYPE_p__CameraFile file, String name) {
    return gphoto2JNI.gp_file_set_name(SWIGTYPE_p__CameraFile.getCPtr(file), name);
  }

  public static int gp_file_get_name(SWIGTYPE_p__CameraFile file, SWIGTYPE_p_p_char name) {
    return gphoto2JNI.gp_file_get_name(SWIGTYPE_p__CameraFile.getCPtr(file), SWIGTYPE_p_p_char.getCPtr(name));
  }

  public static int gp_file_set_mime_type(SWIGTYPE_p__CameraFile file, String mime_type) {
    return gphoto2JNI.gp_file_set_mime_type(SWIGTYPE_p__CameraFile.getCPtr(file), mime_type);
  }

  public static int gp_file_get_mime_type(SWIGTYPE_p__CameraFile file, SWIGTYPE_p_p_char mime_type) {
    return gphoto2JNI.gp_file_get_mime_type(SWIGTYPE_p__CameraFile.getCPtr(file), SWIGTYPE_p_p_char.getCPtr(mime_type));
  }

  public static int gp_file_set_type(SWIGTYPE_p__CameraFile file, CameraFileType type) {
    return gphoto2JNI.gp_file_set_type(SWIGTYPE_p__CameraFile.getCPtr(file), type.swigValue());
  }

  public static int gp_file_get_type(SWIGTYPE_p__CameraFile file, SWIGTYPE_p_CameraFileType type) {
    return gphoto2JNI.gp_file_get_type(SWIGTYPE_p__CameraFile.getCPtr(file), SWIGTYPE_p_CameraFileType.getCPtr(type));
  }

  public static int gp_file_set_mtime(SWIGTYPE_p__CameraFile file, SWIGTYPE_p_time_t mtime) {
    return gphoto2JNI.gp_file_set_mtime(SWIGTYPE_p__CameraFile.getCPtr(file), SWIGTYPE_p_time_t.getCPtr(mtime));
  }

  public static int gp_file_get_mtime(SWIGTYPE_p__CameraFile file, SWIGTYPE_p_time_t mtime) {
    return gphoto2JNI.gp_file_get_mtime(SWIGTYPE_p__CameraFile.getCPtr(file), SWIGTYPE_p_time_t.getCPtr(mtime));
  }

  public static int gp_file_detect_mime_type(SWIGTYPE_p__CameraFile file) {
    return gphoto2JNI.gp_file_detect_mime_type(SWIGTYPE_p__CameraFile.getCPtr(file));
  }

  public static int gp_file_adjust_name_for_mime_type(SWIGTYPE_p__CameraFile file) {
    return gphoto2JNI.gp_file_adjust_name_for_mime_type(SWIGTYPE_p__CameraFile.getCPtr(file));
  }

  public static int gp_file_append(SWIGTYPE_p__CameraFile arg0, String data, long size) {
    return gphoto2JNI.gp_file_append(SWIGTYPE_p__CameraFile.getCPtr(arg0), data, size);
  }

  public static int gp_file_slurp(SWIGTYPE_p__CameraFile arg0, String data, long size, SWIGTYPE_p_size_t readlen) {
    return gphoto2JNI.gp_file_slurp(SWIGTYPE_p__CameraFile.getCPtr(arg0), data, size, SWIGTYPE_p_size_t.getCPtr(readlen));
  }

  public static int gp_file_set_data_and_size(SWIGTYPE_p__CameraFile arg0, String data, long size) {
    return gphoto2JNI.gp_file_set_data_and_size(SWIGTYPE_p__CameraFile.getCPtr(arg0), data, size);
  }

  public static int gp_file_get_data_and_size(SWIGTYPE_p__CameraFile arg0, SWIGTYPE_p_p_char data, SWIGTYPE_p_unsigned_long size) {
    return gphoto2JNI.gp_file_get_data_and_size(SWIGTYPE_p__CameraFile.getCPtr(arg0), SWIGTYPE_p_p_char.getCPtr(data), SWIGTYPE_p_unsigned_long.getCPtr(size));
  }

  public static int gp_filesystem_new(SWIGTYPE_p_p__CameraFilesystem fs) {
    return gphoto2JNI.gp_filesystem_new(SWIGTYPE_p_p__CameraFilesystem.getCPtr(fs));
  }

  public static int gp_filesystem_free(SWIGTYPE_p__CameraFilesystem fs) {
    return gphoto2JNI.gp_filesystem_free(SWIGTYPE_p__CameraFilesystem.getCPtr(fs));
  }

  public static int gp_filesystem_append(SWIGTYPE_p__CameraFilesystem fs, String folder, String filename, _GPContext context) {
    return gphoto2JNI.gp_filesystem_append(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, filename, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_set_info_noop(SWIGTYPE_p__CameraFilesystem fs, String folder, CameraFileInfo info, _GPContext context) {
    return gphoto2JNI.gp_filesystem_set_info_noop(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, CameraFileInfo.getCPtr(info), info, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_set_file_noop(SWIGTYPE_p__CameraFilesystem fs, String folder, SWIGTYPE_p__CameraFile file, _GPContext context) {
    return gphoto2JNI.gp_filesystem_set_file_noop(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, SWIGTYPE_p__CameraFile.getCPtr(file), _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_delete_file_noop(SWIGTYPE_p__CameraFilesystem fs, String folder, String filename, _GPContext context) {
    return gphoto2JNI.gp_filesystem_delete_file_noop(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, filename, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_reset(SWIGTYPE_p__CameraFilesystem fs) {
    return gphoto2JNI.gp_filesystem_reset(SWIGTYPE_p__CameraFilesystem.getCPtr(fs));
  }

  public static int gp_filesystem_count(SWIGTYPE_p__CameraFilesystem fs, String folder, _GPContext context) {
    return gphoto2JNI.gp_filesystem_count(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_name(SWIGTYPE_p__CameraFilesystem fs, String folder, int filenumber, SWIGTYPE_p_p_char filename, _GPContext context) {
    return gphoto2JNI.gp_filesystem_name(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, filenumber, SWIGTYPE_p_p_char.getCPtr(filename), _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_get_folder(SWIGTYPE_p__CameraFilesystem fs, String filename, SWIGTYPE_p_p_char folder, _GPContext context) {
    return gphoto2JNI.gp_filesystem_get_folder(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), filename, SWIGTYPE_p_p_char.getCPtr(folder), _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_number(SWIGTYPE_p__CameraFilesystem fs, String folder, String filename, _GPContext context) {
    return gphoto2JNI.gp_filesystem_number(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, filename, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_set_list_funcs(SWIGTYPE_p__CameraFilesystem fs, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_struct__CameraList_p_void_p_struct__GPContext__int file_list_func, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_struct__CameraList_p_void_p_struct__GPContext__int folder_list_func, SWIGTYPE_p_void data) {
    return gphoto2JNI.gp_filesystem_set_list_funcs(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_struct__CameraList_p_void_p_struct__GPContext__int.getCPtr(file_list_func), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_struct__CameraList_p_void_p_struct__GPContext__int.getCPtr(folder_list_func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static int gp_filesystem_list_files(SWIGTYPE_p__CameraFilesystem fs, String folder, SWIGTYPE_p__CameraList list, _GPContext context) {
    return gphoto2JNI.gp_filesystem_list_files(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, SWIGTYPE_p__CameraList.getCPtr(list), _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_list_folders(SWIGTYPE_p__CameraFilesystem fs, String folder, SWIGTYPE_p__CameraList list, _GPContext context) {
    return gphoto2JNI.gp_filesystem_list_folders(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, SWIGTYPE_p__CameraList.getCPtr(list), _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_set_info_funcs(SWIGTYPE_p__CameraFilesystem fs, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_p_struct__CameraFileInfo_p_void_p_struct__GPContext__int get_info_func, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_struct__CameraFileInfo_p_void_p_struct__GPContext__int set_info_func, SWIGTYPE_p_void data) {
    return gphoto2JNI.gp_filesystem_set_info_funcs(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_p_struct__CameraFileInfo_p_void_p_struct__GPContext__int.getCPtr(get_info_func), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_struct__CameraFileInfo_p_void_p_struct__GPContext__int.getCPtr(set_info_func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static int gp_filesystem_get_info(SWIGTYPE_p__CameraFilesystem fs, String folder, String filename, CameraFileInfo info, _GPContext context) {
    return gphoto2JNI.gp_filesystem_get_info(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, filename, CameraFileInfo.getCPtr(info), info, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_set_info(SWIGTYPE_p__CameraFilesystem fs, String folder, String filename, CameraFileInfo info, _GPContext context) {
    return gphoto2JNI.gp_filesystem_set_info(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, filename, CameraFileInfo.getCPtr(info), info, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_set_file_funcs(SWIGTYPE_p__CameraFilesystem fs, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_enum_CameraFileType_p_struct__CameraFile_p_void_p_struct__GPContext__int get_file_func, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_p_void_p_struct__GPContext__int del_file_func, SWIGTYPE_p_void data) {
    return gphoto2JNI.gp_filesystem_set_file_funcs(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_enum_CameraFileType_p_struct__CameraFile_p_void_p_struct__GPContext__int.getCPtr(get_file_func), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_p_void_p_struct__GPContext__int.getCPtr(del_file_func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static int gp_filesystem_get_file(SWIGTYPE_p__CameraFilesystem fs, String folder, String filename, CameraFileType type, SWIGTYPE_p__CameraFile file, _GPContext context) {
    return gphoto2JNI.gp_filesystem_get_file(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, filename, type.swigValue(), SWIGTYPE_p__CameraFile.getCPtr(file), _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_delete_file(SWIGTYPE_p__CameraFilesystem fs, String folder, String filename, _GPContext context) {
    return gphoto2JNI.gp_filesystem_delete_file(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, filename, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_set_folder_funcs(SWIGTYPE_p__CameraFilesystem fs, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_struct__CameraFile_p_void_p_struct__GPContext__int put_file_func, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_void_p_struct__GPContext__int delete_all_func, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_p_void_p_struct__GPContext__int make_dir_func, SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_p_void_p_struct__GPContext__int remove_dir_func, SWIGTYPE_p_void data) {
    return gphoto2JNI.gp_filesystem_set_folder_funcs(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_struct__CameraFile_p_void_p_struct__GPContext__int.getCPtr(put_file_func), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_void_p_struct__GPContext__int.getCPtr(delete_all_func), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_p_void_p_struct__GPContext__int.getCPtr(make_dir_func), SWIGTYPE_p_f_p_struct__CameraFilesystem_p_q_const__char_p_q_const__char_p_void_p_struct__GPContext__int.getCPtr(remove_dir_func), SWIGTYPE_p_void.getCPtr(data));
  }

  public static int gp_filesystem_get_storageinfo(SWIGTYPE_p__CameraFilesystem fs, SWIGTYPE_p_p__CameraStorageInformation arg1, SWIGTYPE_p_int nrofstorageinformations, _GPContext context) {
    return gphoto2JNI.gp_filesystem_get_storageinfo(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), SWIGTYPE_p_p__CameraStorageInformation.getCPtr(arg1), SWIGTYPE_p_int.getCPtr(nrofstorageinformations), _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_set_funcs(SWIGTYPE_p__CameraFilesystem fs, _CameraFilesystemFuncs funcs, SWIGTYPE_p_void data) {
    return gphoto2JNI.gp_filesystem_set_funcs(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), _CameraFilesystemFuncs.getCPtr(funcs), funcs, SWIGTYPE_p_void.getCPtr(data));
  }

  public static int gp_filesystem_put_file(SWIGTYPE_p__CameraFilesystem fs, String folder, SWIGTYPE_p__CameraFile file, _GPContext context) {
    return gphoto2JNI.gp_filesystem_put_file(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, SWIGTYPE_p__CameraFile.getCPtr(file), _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_delete_all(SWIGTYPE_p__CameraFilesystem fs, String folder, _GPContext context) {
    return gphoto2JNI.gp_filesystem_delete_all(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_make_dir(SWIGTYPE_p__CameraFilesystem fs, String folder, String name, _GPContext context) {
    return gphoto2JNI.gp_filesystem_make_dir(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, name, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_remove_dir(SWIGTYPE_p__CameraFilesystem fs, String folder, String name, _GPContext context) {
    return gphoto2JNI.gp_filesystem_remove_dir(SWIGTYPE_p__CameraFilesystem.getCPtr(fs), folder, name, _GPContext.getCPtr(context), context);
  }

  public static int gp_filesystem_dump(SWIGTYPE_p__CameraFilesystem fs) {
    return gphoto2JNI.gp_filesystem_dump(SWIGTYPE_p__CameraFilesystem.getCPtr(fs));
  }

  public static int gp_list_new(SWIGTYPE_p_p__CameraList list) {
    return gphoto2JNI.gp_list_new(SWIGTYPE_p_p__CameraList.getCPtr(list));
  }

  public static int gp_list_ref(SWIGTYPE_p__CameraList list) {
    return gphoto2JNI.gp_list_ref(SWIGTYPE_p__CameraList.getCPtr(list));
  }

  public static int gp_list_unref(SWIGTYPE_p__CameraList list) {
    return gphoto2JNI.gp_list_unref(SWIGTYPE_p__CameraList.getCPtr(list));
  }

  public static int gp_list_free(SWIGTYPE_p__CameraList list) {
    return gphoto2JNI.gp_list_free(SWIGTYPE_p__CameraList.getCPtr(list));
  }

  public static int gp_list_count(SWIGTYPE_p__CameraList list) {
    return gphoto2JNI.gp_list_count(SWIGTYPE_p__CameraList.getCPtr(list));
  }

  public static int gp_list_append(SWIGTYPE_p__CameraList list, String name, String value) {
    return gphoto2JNI.gp_list_append(SWIGTYPE_p__CameraList.getCPtr(list), name, value);
  }

  public static int gp_list_reset(SWIGTYPE_p__CameraList list) {
    return gphoto2JNI.gp_list_reset(SWIGTYPE_p__CameraList.getCPtr(list));
  }

  public static int gp_list_sort(SWIGTYPE_p__CameraList list) {
    return gphoto2JNI.gp_list_sort(SWIGTYPE_p__CameraList.getCPtr(list));
  }

  public static int gp_list_find_by_name(SWIGTYPE_p__CameraList list, SWIGTYPE_p_int index, String name) {
    return gphoto2JNI.gp_list_find_by_name(SWIGTYPE_p__CameraList.getCPtr(list), SWIGTYPE_p_int.getCPtr(index), name);
  }

  public static int gp_list_get_name(SWIGTYPE_p__CameraList list, int index, SWIGTYPE_p_p_char name) {
    return gphoto2JNI.gp_list_get_name(SWIGTYPE_p__CameraList.getCPtr(list), index, SWIGTYPE_p_p_char.getCPtr(name));
  }

  public static int gp_list_get_value(SWIGTYPE_p__CameraList list, int index, SWIGTYPE_p_p_char value) {
    return gphoto2JNI.gp_list_get_value(SWIGTYPE_p__CameraList.getCPtr(list), index, SWIGTYPE_p_p_char.getCPtr(value));
  }

  public static int gp_list_set_name(SWIGTYPE_p__CameraList list, int index, String name) {
    return gphoto2JNI.gp_list_set_name(SWIGTYPE_p__CameraList.getCPtr(list), index, name);
  }

  public static int gp_list_set_value(SWIGTYPE_p__CameraList list, int index, String value) {
    return gphoto2JNI.gp_list_set_value(SWIGTYPE_p__CameraList.getCPtr(list), index, value);
  }

  public static int gp_list_populate(SWIGTYPE_p__CameraList list, String format, int count) {
    return gphoto2JNI.gp_list_populate(SWIGTYPE_p__CameraList.getCPtr(list), format, count);
  }

  public static int gp_port_new(SWIGTYPE_p_p__GPPort port) {
    return gphoto2JNI.gp_port_new(SWIGTYPE_p_p__GPPort.getCPtr(port));
  }

  public static int gp_port_free(GPPort port) {
    return gphoto2JNI.gp_port_free(GPPort.getCPtr(port), port);
  }

  public static int gp_port_set_info(GPPort port, GPPortInfo info) {
    return gphoto2JNI.gp_port_set_info(GPPort.getCPtr(port), port, GPPortInfo.getCPtr(info), info);
  }

  public static int gp_port_get_info(GPPort port, GPPortInfo info) {
    return gphoto2JNI.gp_port_get_info(GPPort.getCPtr(port), port, GPPortInfo.getCPtr(info), info);
  }

  public static int gp_port_open(GPPort port) {
    return gphoto2JNI.gp_port_open(GPPort.getCPtr(port), port);
  }

  public static int gp_port_close(GPPort port) {
    return gphoto2JNI.gp_port_close(GPPort.getCPtr(port), port);
  }

  public static int gp_port_write(GPPort port, String data, int size) {
    return gphoto2JNI.gp_port_write(GPPort.getCPtr(port), port, data, size);
  }

  public static int gp_port_read(GPPort port, String data, int size) {
    return gphoto2JNI.gp_port_read(GPPort.getCPtr(port), port, data, size);
  }

  public static int gp_port_check_int(GPPort port, String data, int size) {
    return gphoto2JNI.gp_port_check_int(GPPort.getCPtr(port), port, data, size);
  }

  public static int gp_port_check_int_fast(GPPort port, String data, int size) {
    return gphoto2JNI.gp_port_check_int_fast(GPPort.getCPtr(port), port, data, size);
  }

  public static int gp_port_get_timeout(GPPort port, SWIGTYPE_p_int timeout) {
    return gphoto2JNI.gp_port_get_timeout(GPPort.getCPtr(port), port, SWIGTYPE_p_int.getCPtr(timeout));
  }

  public static int gp_port_set_timeout(GPPort port, int timeout) {
    return gphoto2JNI.gp_port_set_timeout(GPPort.getCPtr(port), port, timeout);
  }

  public static int gp_port_set_settings(GPPort port, GPPortSettings settings) {
    return gphoto2JNI.gp_port_set_settings(GPPort.getCPtr(port), port, GPPortSettings.getCPtr(settings), settings);
  }

  public static int gp_port_get_settings(GPPort port, GPPortSettings settings) {
    return gphoto2JNI.gp_port_get_settings(GPPort.getCPtr(port), port, GPPortSettings.getCPtr(settings), settings);
  }

  public static int gp_port_get_pin(GPPort port, GPPin pin, SWIGTYPE_p__GPLevel level) {
    return gphoto2JNI.gp_port_get_pin(GPPort.getCPtr(port), port, pin.swigValue(), SWIGTYPE_p__GPLevel.getCPtr(level));
  }

  public static int gp_port_set_pin(GPPort port, GPPin pin, GPLevel level) {
    return gphoto2JNI.gp_port_set_pin(GPPort.getCPtr(port), port, pin.swigValue(), level.swigValue());
  }

  public static int gp_port_send_break(GPPort port, int duration) {
    return gphoto2JNI.gp_port_send_break(GPPort.getCPtr(port), port, duration);
  }

  public static int gp_port_flush(GPPort port, int direction) {
    return gphoto2JNI.gp_port_flush(GPPort.getCPtr(port), port, direction);
  }

  public static int gp_port_usb_find_device(GPPort port, int idvendor, int idproduct) {
    return gphoto2JNI.gp_port_usb_find_device(GPPort.getCPtr(port), port, idvendor, idproduct);
  }

  public static int gp_port_usb_find_device_by_class(GPPort port, int mainclass, int subclass, int protocol) {
    return gphoto2JNI.gp_port_usb_find_device_by_class(GPPort.getCPtr(port), port, mainclass, subclass, protocol);
  }

  public static int gp_port_usb_clear_halt(GPPort port, int ep) {
    return gphoto2JNI.gp_port_usb_clear_halt(GPPort.getCPtr(port), port, ep);
  }

  public static int gp_port_usb_msg_write(GPPort port, int request, int value, int index, String bytes, int size) {
    return gphoto2JNI.gp_port_usb_msg_write(GPPort.getCPtr(port), port, request, value, index, bytes, size);
  }

  public static int gp_port_usb_msg_read(GPPort port, int request, int value, int index, String bytes, int size) {
    return gphoto2JNI.gp_port_usb_msg_read(GPPort.getCPtr(port), port, request, value, index, bytes, size);
  }

  public static int gp_port_usb_msg_interface_write(GPPort port, int request, int value, int index, String bytes, int size) {
    return gphoto2JNI.gp_port_usb_msg_interface_write(GPPort.getCPtr(port), port, request, value, index, bytes, size);
  }

  public static int gp_port_usb_msg_interface_read(GPPort port, int request, int value, int index, String bytes, int size) {
    return gphoto2JNI.gp_port_usb_msg_interface_read(GPPort.getCPtr(port), port, request, value, index, bytes, size);
  }

  public static int gp_port_usb_msg_class_write(GPPort port, int request, int value, int index, String bytes, int size) {
    return gphoto2JNI.gp_port_usb_msg_class_write(GPPort.getCPtr(port), port, request, value, index, bytes, size);
  }

  public static int gp_port_usb_msg_class_read(GPPort port, int request, int value, int index, String bytes, int size) {
    return gphoto2JNI.gp_port_usb_msg_class_read(GPPort.getCPtr(port), port, request, value, index, bytes, size);
  }

  public static int gp_port_seek(GPPort port, int offset, int whence) {
    return gphoto2JNI.gp_port_seek(GPPort.getCPtr(port), port, offset, whence);
  }

  public static int gp_port_send_scsi_cmd(GPPort port, int to_dev, String cmd, int cmd_size, String sense, int sense_size, String data, int data_size) {
    return gphoto2JNI.gp_port_send_scsi_cmd(GPPort.getCPtr(port), port, to_dev, cmd, cmd_size, sense, sense_size, data, data_size);
  }

  public static int gp_port_set_error(GPPort port, String format) {
    return gphoto2JNI.gp_port_set_error(GPPort.getCPtr(port), port, format);
  }

  public static String gp_port_get_error(GPPort port) {
    return gphoto2JNI.gp_port_get_error(GPPort.getCPtr(port), port);
  }

  public static int gp_port_info_list_new(SWIGTYPE_p_p__GPPortInfoList list) {
    return gphoto2JNI.gp_port_info_list_new(SWIGTYPE_p_p__GPPortInfoList.getCPtr(list));
  }

  public static int gp_port_info_list_free(_GPPortInfoList list) {
    return gphoto2JNI.gp_port_info_list_free(_GPPortInfoList.getCPtr(list), list);
  }

  public static int gp_port_info_list_append(_GPPortInfoList list, GPPortInfo info) {
    return gphoto2JNI.gp_port_info_list_append(_GPPortInfoList.getCPtr(list), list, GPPortInfo.getCPtr(info), info);
  }

  public static int gp_port_info_list_load(_GPPortInfoList list) {
    return gphoto2JNI.gp_port_info_list_load(_GPPortInfoList.getCPtr(list), list);
  }

  public static int gp_port_info_list_count(_GPPortInfoList list) {
    return gphoto2JNI.gp_port_info_list_count(_GPPortInfoList.getCPtr(list), list);
  }

  public static int gp_port_info_list_lookup_path(_GPPortInfoList list, String path) {
    return gphoto2JNI.gp_port_info_list_lookup_path(_GPPortInfoList.getCPtr(list), list, path);
  }

  public static int gp_port_info_list_lookup_name(_GPPortInfoList list, String name) {
    return gphoto2JNI.gp_port_info_list_lookup_name(_GPPortInfoList.getCPtr(list), list, name);
  }

  public static int gp_port_info_list_get_info(_GPPortInfoList list, int n, GPPortInfo info) {
    return gphoto2JNI.gp_port_info_list_get_info(_GPPortInfoList.getCPtr(list), list, n, GPPortInfo.getCPtr(info), info);
  }

  public static String gp_port_message_codeset(String arg0) {
    return gphoto2JNI.gp_port_message_codeset(arg0);
  }

  public static String gp_port_result_as_string(int result) {
    return gphoto2JNI.gp_port_result_as_string(result);
  }

  public static SWIGTYPE_p_p_char gp_port_library_version(GPVersionVerbosity verbose) {
    long cPtr = gphoto2JNI.gp_port_library_version(verbose.swigValue());
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static String gp_result_as_string(int result) {
    return gphoto2JNI.gp_result_as_string(result);
  }

  public static int gp_setting_set(String id, String key, String value) {
    return gphoto2JNI.gp_setting_set(id, key, value);
  }

  public static int gp_setting_get(String id, String key, String value) {
    return gphoto2JNI.gp_setting_get(id, key, value);
  }

  public static SWIGTYPE_p_p_char gp_library_version(GPVersionVerbosity verbose) {
    long cPtr = gphoto2JNI.gp_library_version(verbose.swigValue());
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static int gp_widget_new(CameraWidgetType type, String label, SWIGTYPE_p_p__CameraWidget widget) {
    return gphoto2JNI.gp_widget_new(type.swigValue(), label, SWIGTYPE_p_p__CameraWidget.getCPtr(widget));
  }

  public static int gp_widget_free(SWIGTYPE_p__CameraWidget widget) {
    return gphoto2JNI.gp_widget_free(SWIGTYPE_p__CameraWidget.getCPtr(widget));
  }

  public static int gp_widget_ref(SWIGTYPE_p__CameraWidget widget) {
    return gphoto2JNI.gp_widget_ref(SWIGTYPE_p__CameraWidget.getCPtr(widget));
  }

  public static int gp_widget_unref(SWIGTYPE_p__CameraWidget widget) {
    return gphoto2JNI.gp_widget_unref(SWIGTYPE_p__CameraWidget.getCPtr(widget));
  }

  public static int gp_widget_append(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p__CameraWidget child) {
    return gphoto2JNI.gp_widget_append(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p__CameraWidget.getCPtr(child));
  }

  public static int gp_widget_prepend(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p__CameraWidget child) {
    return gphoto2JNI.gp_widget_prepend(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p__CameraWidget.getCPtr(child));
  }

  public static int gp_widget_count_children(SWIGTYPE_p__CameraWidget widget) {
    return gphoto2JNI.gp_widget_count_children(SWIGTYPE_p__CameraWidget.getCPtr(widget));
  }

  public static int gp_widget_get_child(SWIGTYPE_p__CameraWidget widget, int child_number, SWIGTYPE_p_p__CameraWidget child) {
    return gphoto2JNI.gp_widget_get_child(SWIGTYPE_p__CameraWidget.getCPtr(widget), child_number, SWIGTYPE_p_p__CameraWidget.getCPtr(child));
  }

  public static int gp_widget_get_child_by_label(SWIGTYPE_p__CameraWidget widget, String label, SWIGTYPE_p_p__CameraWidget child) {
    return gphoto2JNI.gp_widget_get_child_by_label(SWIGTYPE_p__CameraWidget.getCPtr(widget), label, SWIGTYPE_p_p__CameraWidget.getCPtr(child));
  }

  public static int gp_widget_get_child_by_id(SWIGTYPE_p__CameraWidget widget, int id, SWIGTYPE_p_p__CameraWidget child) {
    return gphoto2JNI.gp_widget_get_child_by_id(SWIGTYPE_p__CameraWidget.getCPtr(widget), id, SWIGTYPE_p_p__CameraWidget.getCPtr(child));
  }

  public static int gp_widget_get_child_by_name(SWIGTYPE_p__CameraWidget widget, String name, SWIGTYPE_p_p__CameraWidget child) {
    return gphoto2JNI.gp_widget_get_child_by_name(SWIGTYPE_p__CameraWidget.getCPtr(widget), name, SWIGTYPE_p_p__CameraWidget.getCPtr(child));
  }

  public static int gp_widget_get_root(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_p__CameraWidget root) {
    return gphoto2JNI.gp_widget_get_root(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_p__CameraWidget.getCPtr(root));
  }

  public static int gp_widget_get_parent(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_p__CameraWidget parent) {
    return gphoto2JNI.gp_widget_get_parent(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_p__CameraWidget.getCPtr(parent));
  }

  public static int gp_widget_set_value(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_void value) {
    return gphoto2JNI.gp_widget_set_value(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_void.getCPtr(value));
  }

  public static int gp_widget_get_value(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_void value) {
    return gphoto2JNI.gp_widget_get_value(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_void.getCPtr(value));
  }

  public static int gp_widget_set_name(SWIGTYPE_p__CameraWidget widget, String name) {
    return gphoto2JNI.gp_widget_set_name(SWIGTYPE_p__CameraWidget.getCPtr(widget), name);
  }

  public static int gp_widget_get_name(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_p_char name) {
    return gphoto2JNI.gp_widget_get_name(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_p_char.getCPtr(name));
  }

  public static int gp_widget_set_info(SWIGTYPE_p__CameraWidget widget, String info) {
    return gphoto2JNI.gp_widget_set_info(SWIGTYPE_p__CameraWidget.getCPtr(widget), info);
  }

  public static int gp_widget_get_info(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_p_char info) {
    return gphoto2JNI.gp_widget_get_info(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_p_char.getCPtr(info));
  }

  public static int gp_widget_get_id(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_int id) {
    return gphoto2JNI.gp_widget_get_id(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_int.getCPtr(id));
  }

  public static int gp_widget_get_type(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_CameraWidgetType type) {
    return gphoto2JNI.gp_widget_get_type(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_CameraWidgetType.getCPtr(type));
  }

  public static int gp_widget_get_label(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_p_char label) {
    return gphoto2JNI.gp_widget_get_label(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_p_char.getCPtr(label));
  }

  public static int gp_widget_set_range(SWIGTYPE_p__CameraWidget range, float low, float high, float increment) {
    return gphoto2JNI.gp_widget_set_range(SWIGTYPE_p__CameraWidget.getCPtr(range), low, high, increment);
  }

  public static int gp_widget_get_range(SWIGTYPE_p__CameraWidget range, SWIGTYPE_p_float min, SWIGTYPE_p_float max, SWIGTYPE_p_float increment) {
    return gphoto2JNI.gp_widget_get_range(SWIGTYPE_p__CameraWidget.getCPtr(range), SWIGTYPE_p_float.getCPtr(min), SWIGTYPE_p_float.getCPtr(max), SWIGTYPE_p_float.getCPtr(increment));
  }

  public static int gp_widget_add_choice(SWIGTYPE_p__CameraWidget widget, String choice) {
    return gphoto2JNI.gp_widget_add_choice(SWIGTYPE_p__CameraWidget.getCPtr(widget), choice);
  }

  public static int gp_widget_count_choices(SWIGTYPE_p__CameraWidget widget) {
    return gphoto2JNI.gp_widget_count_choices(SWIGTYPE_p__CameraWidget.getCPtr(widget));
  }

  public static int gp_widget_get_choice(SWIGTYPE_p__CameraWidget widget, int choice_number, SWIGTYPE_p_p_char choice) {
    return gphoto2JNI.gp_widget_get_choice(SWIGTYPE_p__CameraWidget.getCPtr(widget), choice_number, SWIGTYPE_p_p_char.getCPtr(choice));
  }

  public static int gp_widget_changed(SWIGTYPE_p__CameraWidget widget) {
    return gphoto2JNI.gp_widget_changed(SWIGTYPE_p__CameraWidget.getCPtr(widget));
  }

  public static int gp_widget_set_changed(SWIGTYPE_p__CameraWidget widget, int changed) {
    return gphoto2JNI.gp_widget_set_changed(SWIGTYPE_p__CameraWidget.getCPtr(widget), changed);
  }

  public static int gp_widget_set_readonly(SWIGTYPE_p__CameraWidget widget, int readonly) {
    return gphoto2JNI.gp_widget_set_readonly(SWIGTYPE_p__CameraWidget.getCPtr(widget), readonly);
  }

  public static int gp_widget_get_readonly(SWIGTYPE_p__CameraWidget widget, SWIGTYPE_p_int readonly) {
    return gphoto2JNI.gp_widget_get_readonly(SWIGTYPE_p__CameraWidget.getCPtr(widget), SWIGTYPE_p_int.getCPtr(readonly));
  }

  public static _Camera dereference_p_p__Camera(SWIGTYPE_p_p__Camera pp_C) {
    long cPtr = gphoto2JNI.dereference_p_p__Camera(SWIGTYPE_p_p__Camera.getCPtr(pp_C));
    return (cPtr == 0) ? null : new _Camera(cPtr, false);
  }

  public static _CameraAbilitiesList dereference_p_p__CameraAbilitiesList(SWIGTYPE_p_p__CameraAbilitiesList pp_CAL) {
    long cPtr = gphoto2JNI.dereference_p_p__CameraAbilitiesList(SWIGTYPE_p_p__CameraAbilitiesList.getCPtr(pp_CAL));
    return (cPtr == 0) ? null : new _CameraAbilitiesList(cPtr, false);
  }

  public static _GPPortInfoList dereference_p_p__GPPortInfoList(SWIGTYPE_p_p__GPPortInfoList pp_GPPIL) {
    long cPtr = gphoto2JNI.dereference_p_p__GPPortInfoList(SWIGTYPE_p_p__GPPortInfoList.getCPtr(pp_GPPIL));
    return (cPtr == 0) ? null : new _GPPortInfoList(cPtr, false);
  }

  public static SWIGTYPE_p__CameraList dereference_p_p__CameraList(SWIGTYPE_p_p__CameraList pp_CL) {
    long cPtr = gphoto2JNI.dereference_p_p__CameraList(SWIGTYPE_p_p__CameraList.getCPtr(pp_CL));
    return (cPtr == 0) ? null : new SWIGTYPE_p__CameraList(cPtr, false);
  }

  public static String dereference_p_p__char(SWIGTYPE_p_p_char pp_C) {
    return gphoto2JNI.dereference_p_p__char(SWIGTYPE_p_p_char.getCPtr(pp_C));
  }

  public static SWIGTYPE_p_p__GPPortInfoList create_null_p_p__GPPortInfoList() {
    long cPtr = gphoto2JNI.create_null_p_p__GPPortInfoList();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p__GPPortInfoList(cPtr, false);
  }

  public static SWIGTYPE_p_p__Camera create_null_p_p__Camera() {
    long cPtr = gphoto2JNI.create_null_p_p__Camera();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p__Camera(cPtr, false);
  }

  public static SWIGTYPE_p_p__CameraAbilitiesList create_null_p_p__CameraAbilitiesList() {
    long cPtr = gphoto2JNI.create_null_p_p__CameraAbilitiesList();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p__CameraAbilitiesList(cPtr, false);
  }

  public static SWIGTYPE_p_p__CameraList create_null_p_p__CameraList() {
    long cPtr = gphoto2JNI.create_null_p_p__CameraList();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p__CameraList(cPtr, false);
  }

  public static SWIGTYPE_p_p_char create_null_p_p__char() {
    long cPtr = gphoto2JNI.create_null_p_p__char();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static void delete_p_p__GPPortInfoList(SWIGTYPE_p_p__GPPortInfoList pp_GPPIL) {
    gphoto2JNI.delete_p_p__GPPortInfoList(SWIGTYPE_p_p__GPPortInfoList.getCPtr(pp_GPPIL));
  }

  public static void delete_p_p__Camera(SWIGTYPE_p_p__Camera pp_C) {
    gphoto2JNI.delete_p_p__Camera(SWIGTYPE_p_p__Camera.getCPtr(pp_C));
  }

  public static void delete_p_p__CameraAbilitiesList(SWIGTYPE_p_p__CameraAbilitiesList pp_CAL) {
    gphoto2JNI.delete_p_p__CameraAbilitiesList(SWIGTYPE_p_p__CameraAbilitiesList.getCPtr(pp_CAL));
  }

  public static void delete_p_p__CameraList(SWIGTYPE_p_p__CameraList pp_CL) {
    gphoto2JNI.delete_p_p__CameraList(SWIGTYPE_p_p__CameraList.getCPtr(pp_CL));
  }

  public static void delete_p_p__char(SWIGTYPE_p_p_char pp_C) {
    gphoto2JNI.delete_p_p__char(SWIGTYPE_p_p_char.getCPtr(pp_C));
  }

}
